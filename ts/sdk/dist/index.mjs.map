{"version":3,"file":"index.mjs","sources":["../src/contracts/SwaprouterContract.ts"],"sourcesContent":["/**\n* This file was automatically generated by cosmwasm-typescript-gen@0.3.9.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the cosmwasm-typescript-gen generate command to regenerate this file.\n*/\n\nimport { CosmWasmClient, ExecuteResult, SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { StdFee } from \"@cosmjs/amino\";\nexport type ExecuteMsg = {\n  set_route: {\n    input_denom: string;\n    output_denom: string;\n    pool_route: SwapAmountInRoute[];\n    [k: string]: unknown;\n  };\n};\nexport interface SwapAmountInRoute {\n  pool_id: number;\n  token_out_denom: string;\n  [k: string]: unknown;\n}\nexport interface GetOwnerResponse {\n  owner: string;\n  [k: string]: unknown;\n}\nexport interface GetRouteResponse {\n  pool_route: SwapAmountInRoute[];\n  [k: string]: unknown;\n}\nexport interface InstantiateMsg {\n  owner: string;\n  [k: string]: unknown;\n}\nexport type QueryMsg = {\n  get_owner: {\n    [k: string]: unknown;\n  };\n} | {\n  get_route: {\n    input_denom: string;\n    output_denom: string;\n    [k: string]: unknown;\n  };\n};\nexport type Addr = string;\nexport interface State {\n  owner: Addr;\n  [k: string]: unknown;\n}\nexport interface SwapMsgReplyState {\n  original_sender: Addr;\n  swap_msg: MsgSwapExactAmountIn;\n  [k: string]: unknown;\n}\nexport interface MsgSwapExactAmountIn {\n  routes: SwapAmountInRoute[];\n  sender: string;\n  token_in?: Coin | null;\n  token_out_min_amount: string;\n  [k: string]: unknown;\n}\nexport interface Coin {\n  amount: string;\n  denom: string;\n  [k: string]: unknown;\n}\nexport interface SwaprouterReadOnlyInterface {\n  contractAddress: string;\n  getOwner: () => Promise<GetOwnerResponse>;\n  getRoute: ({\n    inputDenom,\n    outputDenom\n  }: {\n    inputDenom: string;\n    outputDenom: string;\n  }) => Promise<GetRouteResponse>;\n}\nexport class SwaprouterQueryClient implements SwaprouterReadOnlyInterface {\n  client: CosmWasmClient;\n  contractAddress: string;\n\n  constructor(client: CosmWasmClient, contractAddress: string) {\n    this.client = client;\n    this.contractAddress = contractAddress;\n    this.getOwner = this.getOwner.bind(this);\n    this.getRoute = this.getRoute.bind(this);\n  }\n\n  getOwner = async (): Promise<GetOwnerResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      get_owner: {}\n    });\n  };\n  getRoute = async ({\n    inputDenom,\n    outputDenom\n  }: {\n    inputDenom: string;\n    outputDenom: string;\n  }): Promise<GetRouteResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      get_route: {\n        input_denom: inputDenom,\n        output_denom: outputDenom\n      }\n    });\n  };\n}\nexport interface SwaprouterInterface extends SwaprouterReadOnlyInterface {\n  contractAddress: string;\n  sender: string;\n  setRoute: ({\n    inputDenom,\n    outputDenom,\n    poolRoute\n  }: {\n    inputDenom: string;\n    outputDenom: string;\n    poolRoute: SwapAmountInRoute[];\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;\n}\nexport class SwaprouterClient extends SwaprouterQueryClient implements SwaprouterInterface {\n  client: SigningCosmWasmClient;\n  sender: string;\n  contractAddress: string;\n\n  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {\n    super(client, contractAddress);\n    this.client = client;\n    this.sender = sender;\n    this.contractAddress = contractAddress;\n    this.setRoute = this.setRoute.bind(this);\n  }\n\n  setRoute = async ({\n    inputDenom,\n    outputDenom,\n    poolRoute\n  }: {\n    inputDenom: string;\n    outputDenom: string;\n    poolRoute: SwapAmountInRoute[];\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: readonly Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      set_route: {\n        input_denom: inputDenom,\n        output_denom: outputDenom,\n        pool_route: poolRoute\n      }\n    }, fee, memo, funds);\n  };\n}"],"names":[],"mappings":"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"}